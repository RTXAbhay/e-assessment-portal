// backend/routes/chat.js
import express from "express";
import { CohereClient } from "cohere-ai";
import { requireAuth } from "../middleware/auth.js";
import Chat from "../models/Chat.js";

const router = express.Router();
const cohere = new CohereClient({ apiKey: process.env.COHERE_API_KEY });

// GET saved chat history
router.get("/", requireAuth, async (req, res) => {
  try {
    const chat = await Chat.findOne({ user: req.user.id });
    res.json({ messages: chat?.messages || [] });
  } catch (err) {
    console.error("Fetch chat error:", err);
    res.status(500).json({ error: err.message });
  }
});

// POST ask and save
router.post("/", requireAuth, async (req, res) => {
  const { messages } = req.body; // array of { role, content }
  if (!Array.isArray(messages)) {
    return res.status(400).json({ error: "messages must be an array" });
  }

  try {
    // Build the prompt
    const prompt = messages
      .map(m => `${m.role === "user" ? "Student" : "Assistant"}: ${m.content}`)
      .join("\n") + "\nAssistant:";

    // Generate reply
    const response = await cohere.generate({
      model: "command",
      prompt,
      max_tokens: 150,
      temperature: 0.7,
      stop_sequences: ["Student:"],
    });

    const generation = response.generations?.[0];
    const text = generation?.text?.trim();
    if (!text) throw new Error("No reply generated by Cohere");

    // Append both the user message and the assistant reply to DB
    const chatDoc = await Chat.findOneAndUpdate(
      { user: req.user.id },
      {
        $push: {
          messages: [
            ...messages.slice(-1).map(m => ({ ...m, timestamp: new Date() })),  // only last user msg
            { role: "assistant", content: text, timestamp: new Date() }
          ]
        }
      },
      { upsert: true, new: true, setDefaultsOnInsert: true }
    );

    // Return only the assistant reply
    res.json({ reply: text });
  } catch (err) {
    console.error("Chat error:", err);
    res.status(500).json({ error: err.message });
  }
});

export default router;
